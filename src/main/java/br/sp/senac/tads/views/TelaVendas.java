package br.sp.senac.tads.views;

import br.sp.senac.tads.controller.ClienteController;
import br.sp.senac.tads.controller.ItemVendaController;
import br.sp.senac.tads.controller.ProdutoController;
import br.sp.senac.tads.controller.VendaController;
import br.sp.senac.tads.dao.VendaDAO;
import br.sp.senac.tads.model.Cliente;
import br.sp.senac.tads.model.ItemVenda;
import br.sp.senac.tads.model.Produto;
import br.sp.senac.tads.model.Venda;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.Toolkit;
import java.sql.Date;
import java.time.LocalDate;

public class TelaVendas extends javax.swing.JFrame {

    public TelaVendas() {
        initComponents();
        this.txtQtdEstoque.setEditable(false);
        desabilitado();
        btnPesquisarProdutos1.setVisible(false);
        btnPesquisarProdutosCOD.setVisible(false);
        setIcon(this);
      
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdoGrupoCliente = new javax.swing.ButtonGroup();
        rdoGrupoProduto = new javax.swing.ButtonGroup();
        pnlFundo = new javax.swing.JPanel();
        pnlBarraTitulo = new javax.swing.JPanel();
        lblFechar = new javax.swing.JLabel();
        lblMinimizar = new javax.swing.JLabel();
        lblNovaVenda = new javax.swing.JLabel();
        pnlCliente = new javax.swing.JPanel();
        lblNomeCliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        btnConfirmar = new javax.swing.JPanel();
        lblConfirmar2 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        txtCPF = new javax.swing.JFormattedTextField();
        lblCPF = new javax.swing.JLabel();
        btnPesquisarCliente = new javax.swing.JPanel();
        lblPesquisarCliente = new javax.swing.JLabel();
        lblPesquisarClientePor = new javax.swing.JLabel();
        rdoNomeCliente = new javax.swing.JRadioButton();
        rdoCPF = new javax.swing.JRadioButton();
        pnlProdutos = new javax.swing.JPanel();
        lblProduto = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lblQtdEstoque = new javax.swing.JLabel();
        txtQtdEstoque = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        lblQtd = new javax.swing.JLabel();
        txtQtd = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        btnLimpar = new javax.swing.JPanel();
        lblLimpar = new javax.swing.JLabel();
        btnInserir = new javax.swing.JPanel();
        lblInserir = new javax.swing.JLabel();
        lblCPF1 = new javax.swing.JLabel();
        txtCodigoProduto = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        lblPesquisarPor2 = new javax.swing.JLabel();
        rdoNomeProduto = new javax.swing.JRadioButton();
        rdoCodProd = new javax.swing.JRadioButton();
        btnPesquisarProdutosCOD = new javax.swing.JPanel();
        lblPesquisar = new javax.swing.JLabel();
        btnPesquisarProdutos1 = new javax.swing.JPanel();
        lblPesquisar1 = new javax.swing.JLabel();
        pnlItens = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItens = new javax.swing.JTable();
        btnExcluirItem = new javax.swing.JPanel();
        lblExcluirItem = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JPanel();
        lblCancelar = new javax.swing.JLabel();
        btnConcluir = new javax.swing.JPanel();
        lblConcluir = new javax.swing.JLabel();
        lblCompra = new javax.swing.JLabel();
        lblR$ = new javax.swing.JLabel();
        lblValorTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlFundo.setBackground(new java.awt.Color(255, 255, 255));
        pnlFundo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlBarraTitulo.setBackground(new java.awt.Color(0, 85, 166));
        pnlBarraTitulo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblFechar.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        lblFechar.setForeground(new java.awt.Color(255, 255, 255));
        lblFechar.setText("X");
        lblFechar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFecharMouseClicked(evt);
            }
        });
        pnlBarraTitulo.add(lblFechar, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, -1, -1));

        lblMinimizar.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        lblMinimizar.setForeground(new java.awt.Color(255, 255, 255));
        lblMinimizar.setText("_");
        lblMinimizar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseClicked(evt);
            }
        });
        pnlBarraTitulo.add(lblMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 10, -1, -1));

        lblNovaVenda.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lblNovaVenda.setForeground(new java.awt.Color(255, 255, 255));
        lblNovaVenda.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNovaVenda.setText("Nova venda");
        pnlBarraTitulo.add(lblNovaVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 310, 40));

        pnlFundo.add(pnlBarraTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 60));

        pnlCliente.setBackground(new java.awt.Color(255, 255, 255));
        pnlCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(40, 40, 40), 1, true), "Selecione o cliente", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Berlin Sans FB", 0, 18))); // NOI18N
        pnlCliente.setForeground(new java.awt.Color(40, 40, 40));
        pnlCliente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNomeCliente.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblNomeCliente.setForeground(new java.awt.Color(40, 40, 40));
        lblNomeCliente.setText("Nome do cliente");
        pnlCliente.add(lblNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtNomeCliente.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtNomeCliente.setForeground(new java.awt.Color(40, 40, 40));
        txtNomeCliente.setBorder(null);
        txtNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeClienteKeyTyped(evt);
            }
        });
        pnlCliente.add(txtNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 310, -1));
        pnlCliente.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 310, 10));

        btnConfirmar.setBackground(new java.awt.Color(0, 85, 166));
        btnConfirmar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnConfirmar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConfirmarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnConfirmarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnConfirmarMouseExited(evt);
            }
        });
        btnConfirmar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblConfirmar2.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        lblConfirmar2.setForeground(new java.awt.Color(255, 255, 255));
        lblConfirmar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConfirmar2.setText("Confirmar");
        btnConfirmar.add(lblConfirmar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        pnlCliente.add(btnConfirmar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 90, 40));
        pnlCliente.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 190, 10));

        txtCPF.setBorder(null);
        txtCPF.setForeground(new java.awt.Color(40, 40, 40));
        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        pnlCliente.add(txtCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 190, -1));

        lblCPF.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblCPF.setForeground(new java.awt.Color(40, 40, 40));
        lblCPF.setText("CPF");
        pnlCliente.add(lblCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 40, -1));

        btnPesquisarCliente.setBackground(new java.awt.Color(0, 85, 166));
        btnPesquisarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPesquisarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPesquisarClienteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPesquisarClienteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPesquisarClienteMouseExited(evt);
            }
        });
        btnPesquisarCliente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPesquisarCliente.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        lblPesquisarCliente.setForeground(new java.awt.Color(255, 255, 255));
        lblPesquisarCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPesquisarCliente.setText("Pesquisar");
        btnPesquisarCliente.add(lblPesquisarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        pnlCliente.add(btnPesquisarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 90, 40));

        lblPesquisarClientePor.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblPesquisarClientePor.setForeground(new java.awt.Color(40, 40, 40));
        lblPesquisarClientePor.setText("Pesquisar por:");
        pnlCliente.add(lblPesquisarClientePor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        rdoNomeCliente.setBackground(new java.awt.Color(255, 255, 255));
        rdoGrupoCliente.add(rdoNomeCliente);
        rdoNomeCliente.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rdoNomeCliente.setText("Nome");
        rdoNomeCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoNomeClienteMouseClicked(evt);
            }
        });
        rdoNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNomeClienteActionPerformed(evt);
            }
        });
        pnlCliente.add(rdoNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        rdoCPF.setBackground(new java.awt.Color(255, 255, 255));
        rdoGrupoCliente.add(rdoCPF);
        rdoCPF.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rdoCPF.setText("CPF");
        rdoCPF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoCPFMouseClicked(evt);
            }
        });
        pnlCliente.add(rdoCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, -1, -1));

        pnlFundo.add(pnlCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 350, 220));

        pnlProdutos.setBackground(new java.awt.Color(255, 255, 255));
        pnlProdutos.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(40, 40, 40), 1, true), "Produtos", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Berlin Sans FB", 0, 18), new java.awt.Color(40, 40, 40))); // NOI18N
        pnlProdutos.setForeground(new java.awt.Color(40, 40, 40));
        pnlProdutos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblProduto.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblProduto.setForeground(new java.awt.Color(40, 40, 40));
        lblProduto.setText("Nome do Produto");
        pnlProdutos.add(lblProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtNomeProduto.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtNomeProduto.setForeground(new java.awt.Color(40, 40, 40));
        txtNomeProduto.setBorder(null);
        pnlProdutos.add(txtNomeProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 310, -1));
        pnlProdutos.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 310, -1));

        lblQtdEstoque.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblQtdEstoque.setForeground(new java.awt.Color(40, 40, 40));
        lblQtdEstoque.setText("Quantidade em estoque");
        pnlProdutos.add(lblQtdEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 200, 20));

        txtQtdEstoque.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtQtdEstoque.setForeground(new java.awt.Color(40, 40, 40));
        txtQtdEstoque.setBorder(null);
        pnlProdutos.add(txtQtdEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 310, -1));
        pnlProdutos.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 310, 10));

        lblQtd.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblQtd.setForeground(new java.awt.Color(40, 40, 40));
        lblQtd.setText("Quantidade");
        pnlProdutos.add(lblQtd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        txtQtd.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtQtd.setForeground(new java.awt.Color(40, 40, 40));
        txtQtd.setBorder(null);
        txtQtd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQtdKeyTyped(evt);
            }
        });
        pnlProdutos.add(txtQtd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 170, -1));
        pnlProdutos.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 170, 10));

        btnLimpar.setBackground(new java.awt.Color(0, 85, 166));
        btnLimpar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnLimpar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimparMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLimparMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLimparMouseExited(evt);
            }
        });
        btnLimpar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLimpar.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        lblLimpar.setForeground(new java.awt.Color(255, 255, 255));
        lblLimpar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLimpar.setText("Limpar");
        btnLimpar.add(lblLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        pnlProdutos.add(btnLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, 40));

        btnInserir.setBackground(new java.awt.Color(0, 85, 166));
        btnInserir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnInserir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInserirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInserirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInserirMouseExited(evt);
            }
        });
        btnInserir.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblInserir.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        lblInserir.setForeground(new java.awt.Color(255, 255, 255));
        lblInserir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInserir.setText("Inserir");
        btnInserir.add(lblInserir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        pnlProdutos.add(btnInserir, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, -1, 40));

        lblCPF1.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblCPF1.setForeground(new java.awt.Color(40, 40, 40));
        lblCPF1.setText("Cód Produto");
        pnlProdutos.add(lblCPF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 100, -1));

        txtCodigoProduto.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtCodigoProduto.setForeground(new java.awt.Color(40, 40, 40));
        txtCodigoProduto.setBorder(null);
        txtCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoProdutoKeyTyped(evt);
            }
        });
        pnlProdutos.add(txtCodigoProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 310, -1));
        pnlProdutos.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 310, 0));
        pnlProdutos.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 310, 10));

        lblPesquisarPor2.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblPesquisarPor2.setForeground(new java.awt.Color(40, 40, 40));
        lblPesquisarPor2.setText("Pesquisar por:");
        pnlProdutos.add(lblPesquisarPor2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        rdoNomeProduto.setBackground(new java.awt.Color(255, 255, 255));
        rdoGrupoProduto.add(rdoNomeProduto);
        rdoNomeProduto.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rdoNomeProduto.setText("Nome");
        rdoNomeProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoNomeProdutoMouseClicked(evt);
            }
        });
        rdoNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNomeProdutoActionPerformed(evt);
            }
        });
        pnlProdutos.add(rdoNomeProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        rdoCodProd.setBackground(new java.awt.Color(255, 255, 255));
        rdoGrupoProduto.add(rdoCodProd);
        rdoCodProd.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rdoCodProd.setText("Cód Produto");
        rdoCodProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoCodProdMouseClicked(evt);
            }
        });
        pnlProdutos.add(rdoCodProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, -1, -1));

        btnPesquisarProdutosCOD.setBackground(new java.awt.Color(0, 85, 166));
        btnPesquisarProdutosCOD.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPesquisarProdutosCOD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPesquisarProdutosCODMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPesquisarProdutosCODMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPesquisarProdutosCODMouseExited(evt);
            }
        });
        btnPesquisarProdutosCOD.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPesquisar.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        lblPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        lblPesquisar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPesquisar.setText("Pesquisar");
        btnPesquisarProdutosCOD.add(lblPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        pnlProdutos.add(btnPesquisarProdutosCOD, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, 40));

        btnPesquisarProdutos1.setBackground(new java.awt.Color(0, 85, 166));
        btnPesquisarProdutos1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPesquisarProdutos1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPesquisarProdutos1MouseClicked(evt);
            }
        });
        btnPesquisarProdutos1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPesquisar1.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        lblPesquisar1.setForeground(new java.awt.Color(255, 255, 255));
        lblPesquisar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPesquisar1.setText("Pesquisar");
        btnPesquisarProdutos1.add(lblPesquisar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        pnlProdutos.add(btnPesquisarProdutos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, -1, 40));

        pnlFundo.add(pnlProdutos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 350, 350));

        pnlItens.setBackground(new java.awt.Color(255, 255, 255));
        pnlItens.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(40, 40, 40), 1, true), "Itens", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Berlin Sans FB", 0, 18))); // NOI18N
        pnlItens.setForeground(new java.awt.Color(40, 40, 40));
        pnlItens.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblItens.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        tblItens.setForeground(new java.awt.Color(40, 40, 40));
        tblItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome Produto", "Qtd", "Valor Unit.", "Total"
            }
        ));
        tblItens.setGridColor(new java.awt.Color(40, 40, 40));
        tblItens.setSelectionBackground(new java.awt.Color(0, 85, 166));
        jScrollPane1.setViewportView(tblItens);
        if (tblItens.getColumnModel().getColumnCount() > 0) {
            tblItens.getColumnModel().getColumn(0).setResizable(false);
            tblItens.getColumnModel().getColumn(1).setResizable(false);
            tblItens.getColumnModel().getColumn(3).setResizable(false);
        }

        pnlItens.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 420, 540));

        pnlFundo.add(pnlItens, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, 440, 580));

        btnExcluirItem.setBackground(new java.awt.Color(0, 85, 166));
        btnExcluirItem.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnExcluirItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExcluirItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExcluirItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExcluirItemMouseExited(evt);
            }
        });
        btnExcluirItem.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblExcluirItem.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        lblExcluirItem.setForeground(new java.awt.Color(255, 255, 255));
        lblExcluirItem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExcluirItem.setText("Excluir item selecionado");
        btnExcluirItem.add(lblExcluirItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 200, 20));

        pnlFundo.add(btnExcluirItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 650, 220, 40));

        btnCancelar.setBackground(new java.awt.Color(0, 85, 166));
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarMouseExited(evt);
            }
        });
        btnCancelar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCancelar.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        lblCancelar.setForeground(new java.awt.Color(255, 255, 255));
        lblCancelar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCancelar.setText("Cancelar");
        btnCancelar.add(lblCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        pnlFundo.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 650, 90, 40));

        btnConcluir.setBackground(new java.awt.Color(0, 85, 166));
        btnConcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnConcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConcluirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnConcluirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnConcluirMouseExited(evt);
            }
        });
        btnConcluir.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblConcluir.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        lblConcluir.setForeground(new java.awt.Color(255, 255, 255));
        lblConcluir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConcluir.setText("Concluir");
        btnConcluir.add(lblConcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 20));

        pnlFundo.add(btnConcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 650, 90, 40));

        lblCompra.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lblCompra.setForeground(new java.awt.Color(40, 40, 40));
        lblCompra.setText("Valor total da compra:");
        pnlFundo.add(lblCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, -1, -1));

        lblR$.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lblR$.setForeground(new java.awt.Color(40, 40, 40));
        lblR$.setText("R$ ");
        pnlFundo.add(lblR$, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 660, -1, -1));

        lblValorTotal.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lblValorTotal.setForeground(new java.awt.Color(40, 40, 40));
        lblValorTotal.setText("0,00");
        lblValorTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lblValorTotalKeyTyped(evt);
            }
        });
        pnlFundo.add(lblValorTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 660, 90, -1));

        getContentPane().add(pnlFundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 710));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExcluirItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcluirItemMouseExited
        resetColor(btnExcluirItem);
    }//GEN-LAST:event_btnExcluirItemMouseExited

    private void btnExcluirItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcluirItemMouseEntered
        setColor(btnExcluirItem);
    }//GEN-LAST:event_btnExcluirItemMouseEntered

    private void btnExcluirItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcluirItemMouseClicked
        int linhaSelecionada = tblItens.getSelectedRow();
        if (linhaSelecionada >= 0) {
            int result = JOptionPane.showConfirmDialog(this, "Deseja exluir o item selecionado?", "Excluir", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                DefaultTableModel itens = new DefaultTableModel();
                itens = (DefaultTableModel) tblItens.getModel();
                itens.removeRow(linhaSelecionada);
                
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Item!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirItemMouseClicked

    private void btnInserirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirMouseExited
        resetColor(btnInserir);
    }//GEN-LAST:event_btnInserirMouseExited

    private void btnInserirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirMouseEntered
        setColor(btnInserir);
    }//GEN-LAST:event_btnInserirMouseEntered

    //Recebe Array para mostrar no Jtable
     public void loadTable(ArrayList<String[]> listaItens) {
        
        DefaultTableModel tmItens = new DefaultTableModel();
        tmItens.addColumn("Produto");
        tmItens.addColumn("Quantidade");
        tmItens.addColumn("Valor Unt");
        tmItens.addColumn("Total");
        tblItens.setModel(tmItens);
        
        for (String[] elementosItens : listaItens) {

            tmItens.addRow(elementosItens);
        }

        tblItens.getColumnModel().getColumn(0).setPreferredWidth(250); //Produto
        tblItens.getColumnModel().getColumn(1).setPreferredWidth(250); //Quantidade
        tblItens.getColumnModel().getColumn(2).setPreferredWidth(250); //Valor unitário
        tblItens.getColumnModel().getColumn(3).setPreferredWidth(250); //Valor Total

    }
    
     //Inserindo Produto nos Arrays
    private void btnInserirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirMouseClicked
        if (ValidarProduto() ) {
            
            String nome = txtNomeProduto.getText(); // Recebe nome do Produto para passar pra função "RetornaListaProduto" 
            int  COD = Integer.parseInt(txtCodigoProduto.getText()); // Recebe Codigo do Produto para passar pra função "RetornaListaProduto" 
            
            int qtd = Integer.parseInt(txtQtd.getText()); 
            int estoque = Integer.parseInt(txtQtdEstoque.getText());
            
            double totalCompra = 0;
            
            Produto modeloProduto = new Produto();
            ItemVenda modeloItem = new ItemVenda();
            
            ArrayList<Produto> listaProdutos = new ArrayList<>();
            listaProdutos = RetornaListaProduto(nome, COD);  // retorna a lista de Produtos de acordo com o Nome ou Cod inserido
            
            ArrayList<ItemVenda> listaItem = ItemVendaController.getItensList(); 
            ArrayList<String []> listadeItens = new ArrayList<>();
            
            modeloProduto.setNome(nome);
            modeloProduto.setId(COD);
            
            modeloItem.setTotal(modeloProduto.getValorUnitario() * qtd);
            
            Venda modelo = new Venda();
            modeloItem.setTotal(modeloProduto.getValorUnitario() * qtd);

            for (Produto elementos : listaProdutos)  //pega os elementos da Lista de Produtos 
            {
                if (qtd < estoque) //verifica se a quantidade existe em Estoque 
                {
                    //salva as informações para depois resgatar e inserir no Banco
                    ItemVendaController.Salvar(modelo.getIdVenda(), elementos.getId(), 
                    qtd,elementos.getValorUnitario(), elementos.getNome(), elementos.getValorUnitario() * qtd); 
                    
                   //carrega a lista de itens com os itens q foram salvos
                   listadeItens = ItemVendaController.getItemLista
                   (listaItem, listadeItens, elementos.getNome());
                   
                   //passa a lista de itens para o carregar no Jtable
                   this.loadTable(listadeItens);
                }
                else
                {
                   JOptionPane.showMessageDialog(this, "Quantidade do Produto não disponivel no estoque"); 
                }
            }
            //faz a soma no total
              for (ItemVenda valor : listaItem) {
                  
                totalCompra += valor.getTotal();
            }
            
            lblValorTotal.setText(String.valueOf(totalCompra)); 
            
        }
    }//GEN-LAST:event_btnInserirMouseClicked

    private void btnLimparMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimparMouseExited
        resetColor(btnLimpar);
    }//GEN-LAST:event_btnLimparMouseExited

    private void btnLimparMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimparMouseEntered
        setColor(btnLimpar);
    }//GEN-LAST:event_btnLimparMouseEntered

    private void btnLimparMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimparMouseClicked
        limpar();
    }//GEN-LAST:event_btnLimparMouseClicked

    private void btnPesquisarProdutosCODMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarProdutosCODMouseExited
        resetColor(btnPesquisarProdutosCOD);
    }//GEN-LAST:event_btnPesquisarProdutosCODMouseExited

    private void btnPesquisarProdutosCODMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarProdutosCODMouseEntered
        setColor(btnPesquisarProdutosCOD);
    }//GEN-LAST:event_btnPesquisarProdutosCODMouseEntered

    //Pesquisar Produto
    
    private void btnPesquisarProdutosCODMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarProdutosCODMouseClicked
        if (ValidarPesquisaProduto()) {
            
           int  COD = Integer.parseInt(txtCodigoProduto.getText());
           
           String nome = txtNomeProduto.getText();
            
           int respostaCOD = VendaController.ConsultarProdutoPorCodigo(COD);
          
           int qtd = VendaController.ConsultarQuantidadePRPorCOD(COD);
          
             if(respostaCOD == COD)
            {
                txtQtdEstoque.setText(Integer.toString(qtd));
                JOptionPane.showMessageDialog(this, "Produto Localizado!");
                
                RetornaListaProduto(nome, COD);
            }
            else 
            {
                JOptionPane.showMessageDialog(this, "Produto Não Localizado!");
            }
        } 
    }//GEN-LAST:event_btnPesquisarProdutosCODMouseClicked

    //limite de caracteres 
    
    private void txtQtdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtdKeyTyped
        // VALIDAÇÃO QUANTIDADE
     
        if (txtQtd.getText().length() < 5) {
            String caracteres = "0987654321";
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        } else {
            //caso seja maior, estoura o limite de caracteres
            evt.consume();
            JOptionPane.showMessageDialog(this, "Limite de caractere em 5", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        ValidacaoFormato();
    }//GEN-LAST:event_txtQtdKeyTyped

    private void btnConcluirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConcluirMouseExited
        resetColor(btnConcluir);
    }//GEN-LAST:event_btnConcluirMouseExited

    private void btnConcluirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConcluirMouseEntered
        setColor(btnConcluir);
    }//GEN-LAST:event_btnConcluirMouseEntered

    //Concluir venda
    
    private void btnConcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConcluirMouseClicked
        if (ValidarCliente() && ValidarProduto()) {
            
           String Prnome = txtNomeProduto.getText(); //Pega o nome para passar pra função "RetornaListaProduto"
           int  COD = Integer.parseInt(txtCodigoProduto.getText()); // Recebe Codigo do Produto para passar pra função "RetornaListaProduto" 
         
           ArrayList<Produto> listaProdutos = new ArrayList<>();
           
           listaProdutos = RetornaListaProduto(Prnome, COD); // retorna a lista de Produtos de acordo com o Nome ou Cod inserido
           
          ArrayList<ItemVenda> listaitem = ItemVendaController.getItensList();

        boolean validar = true, validarQuantidade = false;
        int quantidadeTotal = 0;
        
        //pega os elementos da Lista de Produtos 

        for (Produto p : listaProdutos) {
          
            //pega os elementos da lista salva
            for (ItemVenda itens : listaitem) {
                // caso os ID's forem iguais, soma a quantidade salva com a total
                if (p.getId() == itens.getIdProduto()) {
                    quantidadeTotal += itens.getQtd();
                }
            }
        }
        
        String nome = txtNomeCliente.getText();
        String CPF = txtCPF.getText();
        
        String nomeCliente = VendaDAO.ConsultarNomeDoClientePorCPF(CPF);
       
        validar = ItemVendaController.ControllerEstoque(quantidadeTotal);
        
        
        //se a quantidade total de itens for menor que a em estoque...
        if (validar == true) {
            
            validarQuantidade = true;
            
            Date data = Date.valueOf(LocalDate.now());//pega a data atual
            int IDCliente = RetornaID(nome, CPF);//pega o ID do cliente para passar pra venda
            
            
            //pega a lista de itens salvos para poder passar para a Controller venda, dps inserir no Banco 
            ArrayList<ItemVenda> itens = ItemVendaController.getItensList();
            
            //pega todas as informações necessarias para inserir a venda
            VendaController.Adicionar(IDCliente,
                    Double.parseDouble(lblValorTotal.getText()),
                    nomeCliente, data, itens);
           
            ItemVendaController.limparlista();

        } else {
            JOptionPane.showMessageDialog(this, "Não foi efetuado nenhuma compra", "Erro de Compra", JOptionPane.ERROR_MESSAGE);
        }

        if (validarQuantidade == false) {
            JOptionPane.showMessageDialog(this, "A soma da quantidade de produto acima do que consta disponível para compra", "Erro de Compra", JOptionPane.ERROR_MESSAGE);
        }
            JOptionPane.showMessageDialog(this, "Venda realizada com Sucesso!");
          
            new TelaMenu().setVisible(true);
            this.dispose();  
        }
    }//GEN-LAST:event_btnConcluirMouseClicked

    private void btnCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseExited
        resetColor(btnCancelar);
    }//GEN-LAST:event_btnCancelarMouseExited

    private void btnCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseEntered
        setColor(btnCancelar);
    }//GEN-LAST:event_btnCancelarMouseEntered

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        //VOLTAR PARA O MENU PRINCIPAL
        limpar();
        new TelaMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void lblMinimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseClicked
        this.setState(1);
    }//GEN-LAST:event_lblMinimizarMouseClicked

    private void lblFecharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFecharMouseClicked
        //VOLTAR PARA O MENU PRINCIPAL
        new TelaMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblFecharMouseClicked

    private void txtNomeClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeClienteKeyTyped
        //verifica se foi digitado número
        if (txtNomeCliente.getText().length() < 30) {
            if (txtNomeCliente.getText().matches("^[0-9].*")) {
                evt.consume();
                JOptionPane.showMessageDialog(this, "Permitido somente letras no campo \"Nome do Cliente\"!");
                limpar();
            }
        } else {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Limite de até 30 caracteres.");
        }
    }//GEN-LAST:event_txtNomeClienteKeyTyped

    private void btnConfirmarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarMouseClicked
        if (ValidarCliente()) {
        
            JOptionPane.showMessageDialog(this, "Cliente Selecionado!");
        }
    }//GEN-LAST:event_btnConfirmarMouseClicked

    private void btnConfirmarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarMouseEntered
        setColor(btnConfirmar);
    }//GEN-LAST:event_btnConfirmarMouseEntered

    private void btnConfirmarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarMouseExited
        resetColor(btnConfirmar);
    }//GEN-LAST:event_btnConfirmarMouseExited

    private void rdoNomeClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoNomeClienteMouseClicked
        if (rdoNomeCliente.isSelected()) {
            habilitado();
        }
    }//GEN-LAST:event_rdoNomeClienteMouseClicked

    private void rdoNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNomeClienteActionPerformed

    private void rdoCPFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoCPFMouseClicked
        if (rdoCPF.isSelected()) {
            habilitado();
        }
    }//GEN-LAST:event_rdoCPFMouseClicked

    
    private void btnPesquisarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarClienteMouseClicked
        if (ValidarCliente()) 
        {
            String nome = txtNomeCliente.getText();
            String CPF = txtCPF.getText();
            
            String respostaNome = VendaController.ConsultarClientePorNome(nome);
            String respostaCPF = VendaController.ConsultarClientePorCPF(CPF);
            
            if (respostaNome.equals(nome) || respostaCPF.equals(CPF)) 
            {
                JOptionPane.showMessageDialog(this, "Cliente Localizado!");
            }
            else 
            {
                JOptionPane.showMessageDialog(this, "Cliente Não Localizado!");
            }
           
        }
    }//GEN-LAST:event_btnPesquisarClienteMouseClicked

    // retorna o ID do cliente
   public static int RetornaID(String Nome, String Cpf)
   {
       int id ;
       
       String nm = VendaController.ConsultarClientePorNome(Nome);
       String CPF = VendaController.ConsultarClientePorCPF(Cpf);
       
       if (nm.equals(Nome)){
       
           id = VendaController.PegarIDClientePorNome(nm);
           
           return id;
       }
       else if (CPF.equals(Cpf))
       {
              id = VendaController.PegarIDClientePorCPF(Cpf);
              
              return id;
       }
       return 0;
   }
    
    private void btnPesquisarClienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarClienteMouseEntered
        setColor(btnPesquisarCliente);
    }//GEN-LAST:event_btnPesquisarClienteMouseEntered

    private void btnPesquisarClienteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarClienteMouseExited
        resetColor(btnPesquisarCliente);
    }//GEN-LAST:event_btnPesquisarClienteMouseExited

    private void txtCodigoProdutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoProdutoKeyTyped
        if (rdoNomeProduto.isSelected()) {
            habilitadoProdutos();
        }
    }//GEN-LAST:event_txtCodigoProdutoKeyTyped

    private void rdoCodProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoCodProdMouseClicked
        if (rdoCodProd.isSelected()) {
            habilitadoProdutos();
        }
    }//GEN-LAST:event_rdoCodProdMouseClicked

    private void rdoNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNomeProdutoActionPerformed
        if (rdoNomeProduto.isSelected()) {
            habilitadoProdutos();
        }
    }//GEN-LAST:event_rdoNomeProdutoActionPerformed

    private void rdoNomeProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoNomeProdutoMouseClicked
        if (rdoNomeProduto.isSelected()) {
            habilitadoProdutos();
        }
    }//GEN-LAST:event_rdoNomeProdutoMouseClicked

    private void lblValorTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblValorTotalKeyTyped
        ValidacaoFormato();
    }//GEN-LAST:event_lblValorTotalKeyTyped

    private void btnPesquisarProdutos1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarProdutos1MouseClicked
             
        String nome = txtNomeProduto.getText();
        String cod = txtCodigoProduto.getText();

            int id =0;
           String respostaNome = VendaController.ConsultarProdutoPorNome(nome);
            int qtd = VendaController.ConsultarQuantidadePRPorNome(nome);
          
             if(respostaNome.equals(nome))
            {
                txtQtdEstoque.setText(Integer.toString(qtd));
                JOptionPane.showMessageDialog(this, "Produto Localizado!");
                
                RetornaListaProduto(nome,  id);
            }   
            else 
            {
                 JOptionPane.showMessageDialog(this, "Produto Não Localizado!");
            }
             
            
    }//GEN-LAST:event_btnPesquisarProdutos1MouseClicked


    private void btnPesquisarProdutos1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarProdutos1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisarProdutos1MouseEntered

    private void btnPesquisarProdutos1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarProdutos1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisarProdutos1MouseExited
    
    public void setIcon(JFrame frm) {
        
        frm.setIconImage(Toolkit.getDefaultToolkit().getImage("src/main/resources/utilitarios/roupas.png"));
        
    }
    
    //Retorna o ID do produto de acordo com o ID informado ou nome
    public static ArrayList<Produto> RetornaListaProduto(String nome, int id)
    {
       int COD = id;
       
       ArrayList<Produto> lista = new ArrayList<Produto> ();
       
       String respostaNome = VendaController.ConsultarProdutoPorNome(nome);
       int respostaCOD = VendaController.ConsultarProdutoPorCodigo(COD);
      
             if(respostaNome.equals(nome))
            {
                lista = VendaController.ConsultarProdutoNome(respostaNome);//receber
                return lista;
            } 
      
           int qtd = VendaController.ConsultarQuantidadePRPorCOD(COD);
      
             if(respostaCOD == COD)
            {
               lista = VendaController.ConsultarProduto(COD); //receber
               return lista;
            }
             return lista;
    }
    
    private void limpar() {
        this.txtNomeProduto.setText("");
        this.txtQtd.setText("");
        this.txtCodigoProduto.setText("");
    }

    private void desabilitado() {
        txtCPF.setEnabled(false);
        txtNomeCliente.setEnabled(false);
        txtNomeProduto.setEnabled(false);
        txtCodigoProduto.setEnabled(false);
        txtQtd.setEnabled(false);
    }

    private void habilitado() {
        if (rdoNomeCliente.isSelected()) {
            txtCPF.setEnabled(false);
            txtNomeCliente.setEnabled(true);
            btnPesquisarCliente.setEnabled(true);
            btnConfirmar.setEnabled(true);
        } else if (rdoCPF.isSelected()) {
            txtNomeCliente.setEnabled(false);
            txtCPF.setEnabled(true);
            btnPesquisarCliente.setEnabled(true);
            btnConfirmar.setEnabled(true);
        }
    }

    private void habilitadoProdutos() {
        if (rdoNomeProduto.isSelected()) {
            txtCodigoProduto.setEnabled(false);
            txtNomeProduto.setEnabled(true);
            btnPesquisarProdutosCOD.setEnabled(true);
            txtQtd.setEnabled(true);
            txtQtdEstoque.setEnabled(true);
            btnLimpar.setEnabled(true);
            btnInserir.setEnabled(true);
            btnPesquisarProdutosCOD.setEnabled(false);
            btnPesquisarProdutos1.setVisible(true);
            btnPesquisarProdutosCOD.setVisible(false);
            
        } else if (rdoCodProd.isSelected()) {
            btnPesquisarProdutosCOD.setEnabled(true);
            txtNomeProduto.setEnabled(false);
            txtCodigoProduto.setEnabled(true);
            btnPesquisarProdutosCOD.setEnabled(true);
            txtQtd.setEnabled(true);
            txtQtdEstoque.setEnabled(true);
            btnLimpar.setEnabled(true);
            btnInserir.setEnabled(true);
            btnPesquisarProdutos1.setEnabled(false);
            btnPesquisarProdutos1.setVisible(false);
            btnPesquisarProdutosCOD.setVisible(true);
        }
    }

    private boolean ValidarCliente() {
        if (rdoNomeCliente.isSelected() == false && rdoCPF.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Selecione uma opção de busca de Cliente!", "Erro!", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (rdoNomeCliente.isSelected() && txtNomeCliente.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "O campo \"Nome\" está vazio!");
            return false;
        }
        if (rdoCPF.isSelected() && this.txtCPF.getText().equals("   .   .   -  ")) {
            JOptionPane.showMessageDialog(this, "O campo \"CPF\" está vazio");
            return false;
        }
        return true;
    }

    private boolean ValidarPesquisaProduto() {
        if (rdoNomeProduto.isSelected() == false && rdoCodProd.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Selecione uma opção de busca de Produto!", "Erro!", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (rdoNomeProduto.isSelected() && txtNomeProduto.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "O campo \"Produto\" está vazio!");
            return false;
        }
        if (rdoCodProd.isSelected() && this.txtCodigoProduto.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "O campo \"Cód Produto\" está vazio");
            return false;
        }
        return true;
    }

    private boolean ValidarProduto() {
        if (rdoNomeProduto.isSelected() == false && rdoCodProd.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Selecione uma opção de busca de Produto!", "Erro!", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (rdoNomeProduto.isSelected() && txtNomeProduto.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "O campo \"Produto\" está vazio!");
            return false;
        }
        if (rdoCodProd.isSelected() && this.txtCodigoProduto.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "O campo \"Cód Produto\" está vazio");
            return false;
        }
        if (rdoNomeProduto.isSelected() && txtQtd.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "O campo \"Quantidade\" está vazio!");
            return false;
        }
        if (rdoCodProd.isSelected() && this.txtQtd.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "O campo \"Quantidade\" está vazio");
            return false;
        }
        return true;
    }

    private boolean ValidacaoFormato() {
        //validação do campo Quantidade
        try {
            if (!this.txtQtd.getText().equalsIgnoreCase("")) {
                Integer.parseInt(txtQtd.getText()); //efetua a conversão para inteiro
            }
            //caso não consiga, exibe mensagem de erro de conversão 
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro na conversão dos dados no campo Quantidade", "Erro de Conversão", JOptionPane.ERROR_MESSAGE);
            txtQtd.setText("");
            return false;
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            return false;
        }
        return true;
    }

    //ALTERAR A COR DO OBJETO AO PASSAR O MOUSE
    public void setColor(JPanel panel) {
        panel.setBackground(new java.awt.Color(40, 40, 40));
    }

    //VOLTAR PARA A COR PADRÃO DO OBJETO AO TIRAR O MOUSE DE CIMA
    public void resetColor(JPanel panel) {
        panel.setBackground(new java.awt.Color(0, 85, 166));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnCancelar;
    private javax.swing.JPanel btnConcluir;
    private javax.swing.JPanel btnConfirmar;
    private javax.swing.JPanel btnExcluirItem;
    private javax.swing.JPanel btnInserir;
    private javax.swing.JPanel btnLimpar;
    private javax.swing.JPanel btnPesquisarCliente;
    private javax.swing.JPanel btnPesquisarProdutos1;
    private javax.swing.JPanel btnPesquisarProdutosCOD;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCPF1;
    private javax.swing.JLabel lblCancelar;
    private javax.swing.JLabel lblCompra;
    private javax.swing.JLabel lblConcluir;
    private javax.swing.JLabel lblConfirmar2;
    private javax.swing.JLabel lblExcluirItem;
    private javax.swing.JLabel lblFechar;
    private javax.swing.JLabel lblInserir;
    private javax.swing.JLabel lblLimpar;
    private javax.swing.JLabel lblMinimizar;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblNovaVenda;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JLabel lblPesquisar1;
    private javax.swing.JLabel lblPesquisarCliente;
    private javax.swing.JLabel lblPesquisarClientePor;
    private javax.swing.JLabel lblPesquisarPor2;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblQtd;
    private javax.swing.JLabel lblQtdEstoque;
    private javax.swing.JLabel lblR$;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JPanel pnlBarraTitulo;
    private javax.swing.JPanel pnlCliente;
    private javax.swing.JPanel pnlFundo;
    private javax.swing.JPanel pnlItens;
    private javax.swing.JPanel pnlProdutos;
    private javax.swing.JRadioButton rdoCPF;
    private javax.swing.JRadioButton rdoCodProd;
    private javax.swing.ButtonGroup rdoGrupoCliente;
    private javax.swing.ButtonGroup rdoGrupoProduto;
    private javax.swing.JRadioButton rdoNomeCliente;
    private javax.swing.JRadioButton rdoNomeProduto;
    private javax.swing.JTable tblItens;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtCodigoProduto;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtQtd;
    private javax.swing.JTextField txtQtdEstoque;
    // End of variables declaration//GEN-END:variables
}
